var search_data = {"index":{"searchIndex":["ingredient","tb","tc","tablecloth","testexamples","testhtml","testtablecloth","testtostring","==()","fraction?()","is_free_text?()","new()","new()","quantity()","test_awkward_syntax_parsing()","test_basic_parsing()","test_examples()","test_html_generation()","test_multi_line_recipe()","test_one_line_recipe()","test_qty_fractions()","test_type()","to_html()","to_s()","units()","readme","readme~"],"longSearchIndex":["ingredient","tb","tc","tablecloth","testexamples","testhtml","testtablecloth","testtostring","ingredient#==()","tb#fraction?()","ingredient#is_free_text?()","ingredient::new()","tablecloth::new()","ingredient#quantity()","testexamples#test_awkward_syntax_parsing()","testexamples#test_basic_parsing()","testtostring#test_examples()","testhtml#test_html_generation()","testtablecloth#test_multi_line_recipe()","testtablecloth#test_one_line_recipe()","testexamples#test_qty_fractions()","testtablecloth#test_type()","tablecloth#to_html()","ingredient#to_s()","ingredient#units()","",""],"info":[["Ingredient","","Ingredient.html","",""],["TB","","TB.html","",""],["TC","","TC.html","",""],["TableCloth","","TableCloth.html","","<p>Base class\n"],["TestExamples","","TestExamples.html","",""],["TestHtml","","TestHtml.html","",""],["TestTablecloth","","TestTablecloth.html","",""],["TestToString","","TestToString.html","",""],["==","Ingredient","Ingredient.html#method-i-3D-3D","(other_ingredient)","<p>simple comparison operator\n"],["fraction?","TB","TB.html#method-i-fraction-3F","()",""],["is_free_text?","Ingredient","Ingredient.html#method-i-is_free_text-3F","()","<p>returns true if this ingredient did not specify a qty or a unit\n"],["new","Ingredient","Ingredient.html#method-c-new","(params)",""],["new","TableCloth","TableCloth.html#method-c-new","(val)",""],["quantity","Ingredient","Ingredient.html#method-i-quantity","()","<p>alias for qty\n"],["test_awkward_syntax_parsing","TestExamples","TestExamples.html#method-i-test_awkward_syntax_parsing","()",""],["test_basic_parsing","TestExamples","TestExamples.html#method-i-test_basic_parsing","()",""],["test_examples","TestToString","TestToString.html#method-i-test_examples","()",""],["test_html_generation","TestHtml","TestHtml.html#method-i-test_html_generation","()",""],["test_multi_line_recipe","TestTablecloth","TestTablecloth.html#method-i-test_multi_line_recipe","()",""],["test_one_line_recipe","TestTablecloth","TestTablecloth.html#method-i-test_one_line_recipe","()",""],["test_qty_fractions","TestExamples","TestExamples.html#method-i-test_qty_fractions","()",""],["test_type","TestTablecloth","TestTablecloth.html#method-i-test_type","()",""],["to_html","TableCloth","TableCloth.html#method-i-to_html","()","<p>NOT YET IMPLEMENTED: will return entire ingredient list an html ul, can be\noverriden to include html â€¦\n"],["to_s","Ingredient","Ingredient.html#method-i-to_s","()","<p>This method formats an ingredient into a readable string\n"],["units","Ingredient","Ingredient.html#method-i-units","()","<p>alias for unit\n"],["README","","README.html","","<p>This is an ingredients markdown for converting pure text to arrays of\nIngredient objects.\n<p>EXAMPLES\n<p>\n"],["README~","","README~.html","","<p>This is an ingredients markdown for converting pure text to arrays of\nIngredient objects.\n<p>EXAMPLES\n<p>\n"]]}}