var search_data = {"index":{"searchIndex":["tb","tc","tablecloth","ingredient","ingredients","recipe","testexamples","testhtml","testtablecloth","testtostring","==()","fraction?()","is_free_text?()","new()","new()","parse()","parse_ingredients()","quantity()","test_add_ingredient()","test_awkward_syntax_parsing()","test_basic_parsing()","test_examples()","test_ingredients_html_generation()","test_iteration()","test_multi_line_recipe()","test_one_line_recipe()","test_qty_fractions()","test_type()","to_html()","to_s()","units()","readme","readme~"],"longSearchIndex":["tb","tc","tablecloth","tablecloth::ingredient","tablecloth::ingredients","tablecloth::recipe","testexamples","testhtml","testtablecloth","testtostring","tablecloth::ingredient#==()","tb#fraction?()","tablecloth::ingredient#is_free_text?()","tablecloth::ingredient::new()","tablecloth::recipe::new()","tablecloth::ingredient::parse()","tablecloth::recipe#parse_ingredients()","tablecloth::ingredient#quantity()","testtablecloth#test_add_ingredient()","testexamples#test_awkward_syntax_parsing()","testexamples#test_basic_parsing()","testtostring#test_examples()","testhtml#test_ingredients_html_generation()","testtablecloth#test_iteration()","testtablecloth#test_multi_line_recipe()","testtablecloth#test_one_line_recipe()","testexamples#test_qty_fractions()","testtablecloth#test_type()","tablecloth::ingredients#to_html()","tablecloth::ingredient#to_s()","tablecloth::ingredient#units()","",""],"info":[["TB","","TB.html","",""],["TC","","TC.html","",""],["TableCloth","","TableCloth.html","","<p>Base class\n"],["TableCloth::Ingredient","","TableCloth/Ingredient.html","",""],["TableCloth::Ingredients","","TableCloth/Ingredients.html","",""],["TableCloth::Recipe","","TableCloth/Recipe.html","",""],["TestExamples","","TestExamples.html","",""],["TestHtml","","TestHtml.html","",""],["TestTablecloth","","TestTablecloth.html","",""],["TestToString","","TestToString.html","",""],["==","TableCloth::Ingredient","TableCloth/Ingredient.html#method-i-3D-3D","(other_ingredient)","<p>simple comparison operator\n"],["fraction?","TB","TB.html#method-i-fraction-3F","()",""],["is_free_text?","TableCloth::Ingredient","TableCloth/Ingredient.html#method-i-is_free_text-3F","()","<p>returns true if this ingredient did not specify a qty or a unit\n"],["new","TableCloth::Ingredient","TableCloth/Ingredient.html#method-c-new","(params)",""],["new","TableCloth::Recipe","TableCloth/Recipe.html#method-c-new","(*args)",""],["parse","TableCloth::Ingredient","TableCloth/Ingredient.html#method-c-parse","(str, units_hash)","<p>parse a single line from the ingredients list\n"],["parse_ingredients","TableCloth::Recipe","TableCloth/Recipe.html#method-i-parse_ingredients","(ingredients)","<p>add ingredients straight into tablecloth instance\n"],["quantity","TableCloth::Ingredient","TableCloth/Ingredient.html#method-i-quantity","()","<p>alias for qty\n"],["test_add_ingredient","TestTablecloth","TestTablecloth.html#method-i-test_add_ingredient","()",""],["test_awkward_syntax_parsing","TestExamples","TestExamples.html#method-i-test_awkward_syntax_parsing","()",""],["test_basic_parsing","TestExamples","TestExamples.html#method-i-test_basic_parsing","()",""],["test_examples","TestToString","TestToString.html#method-i-test_examples","()",""],["test_ingredients_html_generation","TestHtml","TestHtml.html#method-i-test_ingredients_html_generation","()",""],["test_iteration","TestTablecloth","TestTablecloth.html#method-i-test_iteration","()",""],["test_multi_line_recipe","TestTablecloth","TestTablecloth.html#method-i-test_multi_line_recipe","()",""],["test_one_line_recipe","TestTablecloth","TestTablecloth.html#method-i-test_one_line_recipe","()",""],["test_qty_fractions","TestExamples","TestExamples.html#method-i-test_qty_fractions","()",""],["test_type","TestTablecloth","TestTablecloth.html#method-i-test_type","()",""],["to_html","TableCloth::Ingredients","TableCloth/Ingredients.html#method-i-to_html","(*args)",""],["to_s","TableCloth::Ingredient","TableCloth/Ingredient.html#method-i-to_s","()","<p>This method formats an ingredient into a readable string\n"],["units","TableCloth::Ingredient","TableCloth/Ingredient.html#method-i-units","()","<p>alias for unit\n"],["README","","README.html","","<p>This is an ingredients markdown for converting pure text into recipe\nobjects for use on cooking websites. â€¦\n"],["README~","","README~.html","","<p>This is an ingredients markdown for converting pure text to arrays of\nIngredient objects.\n<p>EXAMPLES\n<p>\n"]]}}